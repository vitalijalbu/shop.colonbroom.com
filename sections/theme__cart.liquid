<!-- sections/theme__cart.liquid -->
{% comment %} 
  Slide out cart and alert cart popup.

  Globals:
    - settings.enable_animations: boolean to enable animations
    - settings.type_seperator: setting to pick the type of seperator between text
    - setttings.cart_button_behavior: set the behavior of the checkout button

  Possible enhancements:
    - Add option to set cart to slideout, alert or page
{% endcomment %}

{% liquid 
  capture upsell_size
    echo collections[section.settings.cart_upsell_products].products_count
  endcapture
  if upsell_size >= 5
    capture upsell_size
      echo 5
    endcapture
  endif 
%}

{% capture drawer_sidebar %}
  {% for block in section.blocks %}
    <div class="border--width border--radius p-4
      {{ section.settings.sidebar_color_border }} 
      {{ section.settings.sidebar_color_scheme }}">
      {% unless block.settings.image_featured == blank %}
        <div class="relative mb-2">
          <div class="w-8 h-8">
            {% render 'component__image', 
              image: block.settings.image_featured,
              aspect_ratio: '',
              background: '',
              crop: 'object-cover',
              container_class: '',
              image_class: '',
              max_width: 32,
              enable_lazy_load: true,
              include_2x: false
            %}
          </div>
        </div>
      {% endunless %}
      <h3 class="mb-2 type__body--bold type--base">
        {{ block.settings.heading }}
      </h3>
      <span
        class="type--small m-0--clear">
        {{ block.settings.content }}
      </span>
    </div>
  {% endfor %}
{% endcapture %}
  
{% capture alert_content %}
  <div class="flex flex-wrap items-center justify-between mb-4">

    <p class="flex items-center mb-0">
      {% render 'component__icon', icon: 'check', size: '24', class: 'mr-1' %} {{ 'info.cart_updated' | t }} (<span x-text="cart.item_count"></span>)
    </p>
    <div class="flex">
      <button class="btn btn--smaller btn--plain"
        title="{{ 'actions.close' | t }}"
        @click="cart_alert = false">
        {% render 'component__icon', icon: 'x', size: '24', class: '' %}
      </button>
    </div>
  </div>

  <button class="btn btn--small btn--plain !w-full mb-2"
    @click="cart_drawer = true; cart_alert = false;">
    {{ 'actions.view_cart' | t }}
  </button>

  <button class="btn btn--small btn--primary !w-full mb-2" @click="checkout_button_loading = true; setTimeout(function(){ checkout_button_loading = false}, 5000); window.location.href = '/checkout';">
    {{ 'labels.checkout' | t }} {% if settings.type_seperator == 'dot' and section.settings.show_button_prices %}Â·{% elsif settings.type_seperator == 'line' and section.settings.show_button_prices %}|{% endif %} 
    {% if section.settings.show_button_prices %}
    <span class="ml-1 type__nav" x-html="Shopify.formatMoney(cart.total_price)"></span>
    {% endif %}
  </button>
{% endcapture %}

<section
  class="fixed inset-0 z-50 overflow-hidden"
  x-show="cart_drawer"
  x-cloak>
  <div class="absolute inset-0 overflow-hidden">
    <div
      class="absolute inset-0 bg-black bg-opacity-50 backdrop-blur-md"
      aria-hidden="true"
      x-show="cart_drawer"
      {% if settings.enable_animations %}
        x-transition:enter="animation-300"
        x-transition:enter-start="opacity-0"
        x-transition:enter-end="opacity-100"
        x-transition:leave="animation-300"
        x-transition:leave-start="opacity-100"
        x-transition:leave-end="opacity-0"
      {% endif %}
      @click="cart_drawer = false;"
      x-cloak>
    </div>
    <div
      class="fixed inset-y-0 right-0 z-10 flex max-w-full"
      x-trap="cart_drawer"
      x-show="cart_drawer"
      {% if settings.enable_animations %}
        x-transition:enter="animation-300 opacity-0"
        x-transition:enter-start="translate-x-8 opacity-0"
        x-transition:enter-end="translate-x-0 opacity-100"
        x-transition:leave="animation-300 opacity-100"
        x-transition:leave-start="translate-x-0 opacity-100"
        x-transition:leave-end="translate-x-8 opacity-0"
      {% endif %}
      x-cloak>
      <div class="lg:flex right-full absolute hidden min-w-[256px] self-start gap-4 m-4 flex-wrap">
        {{ drawer_sidebar }}
      </div>
      <div class="w-screen max-w-full md:max-w-md">
        <div class="flex flex-col h-full shadow-xl color__bg-body" action="{{ routes.cart_url }}" method="post">
          
          {% comment %} Header bar {% endcomment %}
          <section class="border--b-width flex flex-wrap items-center justify-between px-4 py-2 sticky top-0
            {{ section.settings.top_color_scheme }}
            {{ section.settings.top_color_border }}">
            <div>
              <button class="btn btn--smaller {{ section.settings.top_color_button }}" 
                title="{{ 'actions.close' | t }}"
                @click="cart_drawer = false;">
                {% render 'component__icon', icon: 'x', size: '24', class: '' %}
              </button>
            </div>

            <div class="text-right">
              {{ 'labels.cart' | t }} 
              <span x-show="cart.item_count > 0" x-cloak>
                (<span x-text="cart.item_count"></span>)
              </span>
            </div>
          </section>
          
          {% comment %} Cart {% endcomment %}
          <section class="{{ section.settings.main_color_scheme_first }} flex flex-col flex-grow overflow-x-hidden overflow-y-auto" 
            x-data="{ 
              scroll: false,
              animate_index: 0,
              animate_delay: 0
            }"
            @scroll.throttle="scroll = true">

            {% comment %} Progress bar {% endcomment %}
            {% if section.settings.progress_bar_enable %}
              <div class="border--b-width px-4 py-4
                {{ section.settings.main_color_scheme_second }}
                {{ section.settings.main_color_border }}">
                <p 
                  class="mb-2 type--small"
                  x-show="cart.progress_bar_remaining > 0" 
                  x-cloak>
                  {{ 'info.cart_bar_pre_text' | t }} 
                  <span
                    x-html="Shopify.formatMoney(cart.progress_bar_remaining)">
                  </span> 
                  {{ 'info.cart_bar_text' | t }} 
                </p>
                <p 
                  class="mb-2 type--small"
                  x-show="cart.progress_bar_remaining <= 0" 
                  x-cloak>
                  {{ section.settings.progress_bar_success }} 
                </p>
                <div class="h-2 overflow-hidden color__bg-overlay-2 border--radius">
                  <div 
                    class="h-2 color__bg-primary animation-500--all" 
                    :style="{ width: cart.progress_bar_percent }">
                  </div>
                </div>
              </div>  
            {% endif %}
            
            {% comment %} Cart items {% endcomment %}
            <template x-if="cart.items.length == 0">
              <div class="flex flex-col items-center justify-center flex-grow 
                {{ section.settings.main_color_scheme_first }}
                {{ section.settings.main_color_border }}">

                <p>{{ 'info.cart_empty' | t }} </p>
                <a class="btn" href="{{ section.settings.empty_button_url }}">
                  {{ section.settings.empty_button_label }}
                </a>
              </div>
            </template>
            
            <template x-for="(item, index) in cart.items">
              {% render 'template__cart-item' %}
            </template>

            {% comment %} Cart upgrade {% endcomment %}
            {% unless section.settings.main_cart_upgrade_product == blank %}
              <div class="border--b-width w-full p-4 
                {{ section.settings.main_color_scheme_second }}
                {{ section.settings.main_color_border }}"
                x-show="cart.items.length > 0"
                x-cloak>
                <label class="flex items-center">
                  <label class="sr-only" for="cart_upgrade">{{ 'labels.cart_upgrade' | t }}</label>
                  <input 
                    id="cart_upgrade"
                    class="form-checkbox" 
                    type="checkbox"
                    x-ref="upgrade_input" 
                    :checked="cart.items.find((item) => item.variant_id === {{ section.settings.main_cart_upgrade_product }}) === undefined ? false : true" 
                    @click="$refs.upgrade_input.checked ? addCartItem({{ section.settings.main_cart_upgrade_product }},0,1,true) : changeCartItemQuantity({{ section.settings.main_cart_upgrade_product }},0,true,false)"
                  >
                  <p class="mb-0 ml-2 text--small">{{ section.settings.main_cart_upgrade_text }}</p>
                </label>
              </div>
            {% endunless %}

            {% comment %} Notes {% endcomment %}
            {% if section.settings.main_enable_cart_note %}
              <div class="border--b-width w-full p-4 
                {{ section.settings.main_color_scheme_second }}
                {{ section.settings.main_color_border }}" 
                x-data="{ reveal: cart.note != '', currentNote: cart.note }"
                x-show="cart.items.length > 0"
                x-cloak>
                <label class="flex items-center">
                  <label for="notes" class="sr-only">{{ 'labels.notes' | t }}</label>
                  <input id="notes" type="checkbox" :checked="reveal" class="form-checkbox" @click="reveal = ! reveal">

                  <p class="mb-0 ml-2 text--small">{{ 'actions.add_order_note' | t }}</p>
                </label>

                <textarea 
                  rows="4" 
                  class="w-full mt-2 border--radius"
                  placeholder="{{ 'info.cart_note_placeholder' | t }}"
                  name="note"
                  x-show="reveal"
                  x-model="currentNote"
                  @keydown.debounce="updateCartNote(currentNote)"
                  x-cloak></textarea>
              </div>
            {% endif %}
          
            {% comment %} Subtotal {% endcomment %}
            <div class="border--b-width w-full p-4 
              {{ section.settings.main_color_scheme_second }}
              {{ section.settings.main_color_border }}"
              {% unless section.settings.main_enable_cart_subtotals %}x-show="cart.total_discount > 0"{% endunless %}
              x-cloak>
              <div class="flex items-center justify-between w-full mb-1">
                <span>{{ 'labels.subtotal' | t }}</span>
                <span x-html="Shopify.formatMoney(cart.original_total_price, true)">
                  {% render 'component__format-price', price: cart.original_total_price %}
                </span>
              </div>
              <div class="flex items-center justify-between w-full mb-1">
                <span>{{ 'labels.discount' | t }}</span>
                <span x-html="Shopify.formatMoney(cart.total_discount, true)">
                  -{% render 'component__format-price', price: cart.total_discount %}
                </span>
              </div>
              <div class="flex items-center justify-between w-full">
                <span class="flex items-center w-full">
                  <strong>{{ 'labels.total' | t }}</strong>
                  {% if cart.taxes_included %}
                    {% capture taxes_included %}
                      {{ 'info.shipping_at_checkout_taxes_included' | t }}
                    {% endcapture %}
                    <div class="ml-1">
                      {% render 'component__badge', 
                        color: 'overlay-1',
                        icon: '',
                        content: taxes_included %}
                    </div>
                  {% endif %}
                </span>
                <strong 
                  class="w-full text-right" 
                  x-html="Shopify.formatMoney(cart.total_price, true)">
                  {% render 'component__format-price', price: cart.total_price %}
                </strong>
              </div>
            </div>
            
            {% comment %} Share {% endcomment %}
            {% if section.settings.main_enable_cart_share %}
              <div class="border--b-width w-full p-4
                {{ section.settings.main_color_scheme_second }}
                {{ section.settings.main_color_border }}"
                x-show="cart.items.length > 0"
                x-cloak>

                <p class="mb-2 type--small">{{ 'labels.share_your_cart' | t }}</p>
                <div class="flex w-full mb-2"
                  x-data="{
                    copy: '{{ 'actions.copy_url' | t }}'
                  }">
                  <label for="copy-cart" class="sr-only">{{ 'actions.copy_url' | t }}</label>
                  <input 
                    id="copy-cart"
                    class="flex-grow -mr-6 form-input" 
                    type="text"
                    placeholder="cart/?="
                    autocorrect="off" 
                    autocapitalize="off"
                    :value="generateUrl()">
                  <button type="submit" 
                    class="btn btn--secondary btn--smaller whitespace-nowrap shrink-0"
                    @click="
                      copyToClipboard('copy-cart');
                      copy = '{{ 'actions.copied' | t }}';
                    ">
                    <span class="btn__content" x-text="copy">{{ 'actions.copy_url' | t }}</span>
                  </button>
                </div>

                <p class="mb-0 opacity-75 type--smaller">
                  {{ 'info.share_cart_description' | t }}
                </p>
              </div>
            {% endif %} 

            {% comment %} Scroll indicator {% endcomment %}
            <div class="sticky text-center bottom-4"
              @click="scroll = true;"
              x-show="!scroll && cart.items.length > 5"
              {% if settings.enable_animations %}
                x-transition:enter="animation-300"
                x-transition:enter-start="opacity-0 translate-y-8"
                x-transition:enter-end="opacity-100"
                x-transition:leave="animation-300"
                x-transition:leave-start="opacity-100"
                x-transition:leave-end="opacity-0 translate-y-8"
              {% endif %}
              x-cloak>
              <button class="shadow-sm btn btn--plain btn--small" title="{{ 'actions.scroll_down' | t }}">
                {% render 'component__icon', icon: 'arrow-down', size: '20', class: '' %}
              </button>
            </div>
            
          </section>
            
          {% comment %} Sticky footer {% endcomment %}
          <aside class="border--t-width mt-auto
            {{ section.settings.bottom_color_scheme }}
            {{ section.settings.bottom_color_border }}"
            x-show="cart.items.length > 0" 
            x-cloak>
            <div class="flex flex-wrap"
              x-data="{
                index: 0,
                index_size: {{ upsell_size | default: 0 }},
                show_arrows: true,
                
                scrollToIndex(index_scroll) {
                  let slider = this.$refs.slider;
                  let currentSlide = slider.querySelector('[data-slide=&quot;' + index_scroll + '&quot;]');
                  if (currentSlide) {
                    let sliderWidth = slider.offsetWidth;
                    let currentSlidePosition = currentSlide.offsetLeft;
                    let currentSlideWidth = currentSlide.offsetWidth;
                    let centerPosition = currentSlidePosition + currentSlideWidth / 2 - sliderWidth / 2;
                
                    slider.scrollTo({
                      top: 0,
                      left: centerPosition,
                      behavior: 'smooth'
                    });
                  }
                },

                scrollNext() {
                  let slider = this.$refs.slider;
                  let scrolledToEnd = (el) => {
                    if(el.scrollLeft + el.offsetWidth == el.scrollWidth){
                      return true;
                    } else {
                      return false;
                    } 
                  }
                  if(this.index >= this.index_size || scrolledToEnd(slider)){
                    this.index = 0
                    this.scrollToIndex(0);
                  } else {
                    this.index++
                    this.scrollToIndex(this.index);
                  }
                },
                
                scrollBack() {
                  let slider = this.$refs.slider;
                  if(this.index <= 0 || slider.scrollLeft == 0){
                    this.index = this.index_size;
                    this.scrollToIndex(this.index);
                  } else {
                    this.index--
                    this.scrollToIndex(this.index);
                  }
                }
              }">

              {% comment %} Upsells{% endcomment %}
              {% unless section.settings.cart_upsell_products == blank %}
                {% if collections[section.settings.cart_upsell_products].products.size > 0 %}
                  <div 
                    class="relative flex flex-wrap w-full mt-4">
                    
                    <div class="items-center justify-between hidden w-full gap-4 px-4 mb-4 md:flex">
                      <div>{{ 'labels.cart_upsell' | t }} </div>
                      <div class="flex gap-4">
                        <button class="btn btn--plain btn--small !w-8 !h-8 !min-w-0 !min-h-0"
                          title="{{ 'labels.next_slide' | t }}"
                          @click="scrollNext();">
                          {% render 'component__icon', icon: 'arrow-right', size: '16', class: '' %}
                        </button>
                      </div>
                    </div>
                    
                    <div class="inline-flex w-full gap-2 px-4 overflow-x-auto whitespace-nowrap md:snap-x md:snap-mandatory md:gap-4 hidescrollbar" x-ref="slider">
                      {% for product in collections[section.settings.cart_upsell_products].products limit: 5 %}
                        {% render 'component__upsell-slider-item', 
                          product: product, 
                          index: forloop.index0 %}
                      {% endfor %}
                    </div>
              
                  </div>
                {% endif %}
              {% endunless %}
              
              {% comment %} Checkout {% endcomment %}
              <form class="w-full px-4 py-4" action="{{ routes.cart_url }}" method="post" x-data="{checkout_button_loading:false}" @submit.prevent="checkout_button_loading = true; if(enable_audio) { playAudioIfEnabled(click_audio) } ;setTimeout(function(){ checkout_button_loading = false}, 5000); window.location.href = '/checkout';">

                <p class="mb-0">
                  {% if section.settings.cart_button_behavior == 'checkout' %}
                    <button type="submit" name="checkout" 
                      class="!w-full btn btn--load {{ section.settings.bottom_color_button }}"
                      :class="{ 'btn--loading' : checkout_button_loading }"
                      :disabled="checkout_button_loading">
                      <div class="btn__spinner">
                        {% render 'component__icon', icon: 'spinner', size: '24', class: '' %}
                      </div>
                      <div class="btn__content">
                        {{ 'labels.checkout' | t }} {% if settings.type_seperator == 'dot' and section.settings.show_button_prices %}Â·{% elsif settings.type_seperator == 'line' and section.settings.show_button_prices %}|{% endif %} 
                        {% if section.settings.show_button_prices %}
                        <span class="ml-1" x-html="Shopify.formatMoney(cart.total_price)"></span>
                        {% endif %}
                      </div>
                    </button>
                  {% else %}
                    <a href="{{ routes.cart_url }}" 
                      class="!w-full btn btn--load block {{ section.settings.bottom_color_button }}"
                      :class="{ 'btn--loading' : checkout_button_loading }">
                      {{ 'labels.cart' | t }} {% if settings.type_seperator == 'dot' and section.settings.show_button_prices %}Â·{% elsif settings.type_seperator == 'line' and section.settings.show_button_prices %}|{% endif %} 
                      {% if section.settings.show_button_prices %}
                      <span class="ml-1" x-html="Shopify.formatMoney(cart.total_price)"></span>
                      {% endif %}
                    </a>
                  {% endif %}
                  {% if section.settings.show_continue_shopping_button %}
                    <a href="{{ routes.cart_url }}" 
                      @click.prevent="cart_drawer = false;"
                      class="!w-full mt-2 btn btn--secondary btn--load block">
                      {{ 'actions.continue_shopping' | t }}
                    </a>
                  {% endif %}
                 
                </p>
                
                {% unless section.settings.bottom_disclaimer == blank %}
                  <div class="mt-2 type--smaller m-0--clear">
                    {{ section.settings.bottom_disclaimer }}
                  </div>
                {% endunless %}

              </form>
            </div>
          </aside>
          
        </div>
      </div>
    </div>
  </div>
</section>

{% render 'component__alert',
  alert_id: 'cart_alert',
  cart_bar: true,
  content: alert_content 
%}

<script>
  window.__initialData = window.__initialData || {};
  Object.assign(window.__initialData, {
    progress_bar_threshold: {{ section.settings.progress_bar_threshold | times: 100 }},
  });
</script>

{% schema %}
{
  "name":"t:sections.theme_cart.name",
  "settings":[
     {
        "type":"header",
        "content":"t:general.headers.top_bar.content"
     },
     {
        "type":"select",
        "id":"top_color_scheme",
        "label":"t:general.settings.color_scheme.label",
        "options":[
           {
              "value":"color__bg-body color__text",
              "label":"t:general.settings.color_scheme.body.label"
           },
           {
              "value":"color__bg-neutral color__text",
              "label":"t:general.settings.color_scheme.neutral.label"
           },
           {
              "value":"color__bg-overlay-1 color__text",
              "label":"t:general.settings.color_scheme.accent_1.label"
           },
           {
              "value":"color__bg-overlay-2 color__text",
              "label":"t:general.settings.color_scheme.accent_2.label"
           },
           {
              "value":"color__bg-overlay-3 color__text",
              "label":"t:general.settings.color_scheme.accent_3.label"
           },
           {
              "value":"color__bg-primary color__primary",
              "label":"t:general.settings.color_scheme.primary.label"
           },
           {
              "value":"color__bg-secondary color__secondary",
              "label":"t:general.settings.color_scheme.secondary.label"
           },
           {
              "value":"color__bg-tertiary color__tertiary",
              "label":"t:general.settings.color_scheme.tertiary.label"
           }
        ],
        "default":"color__bg-body color__text"
     },
     {
        "type":"select",
        "id":"top_color_border",
        "label":"t:general.settings.color_border.label",
        "options":[
           {
              "value":"color__border-divider-1",
              "label":"t:general.settings.color_border.subtle.label"
           },
           {
              "value":"color__border-selected-1",
              "label":"t:general.settings.color_border.strong.label"
           },
           {
              "value":"!color__border-transparent",
              "label":"t:general.settings.color_border.none.label"
           }
        ],
        "default":"color__border-divider-1"
     },
     {
        "type":"select",
        "id":"top_color_button",
        "label":"t:general.settings.color_button.label",
        "options":[
           {
              "value":"btn",
              "label":"t:general.settings.color_button.primary.label"
           },
           {
              "value":"btn btn--secondary",
              "label":"t:general.settings.color_button.secondary.label"
           },
           {
              "value":"btn btn--tertiary",
              "label":"t:general.settings.color_button.tertiary.label"
           },
           {
              "value":"btn btn--neutral",
              "label":"t:general.settings.color_button.neutral.label"
           },
           {
              "value":"btn btn--plain",
              "label":"t:general.settings.color_button.plain.label"
           }
        ],
        "default":"btn btn--plain"
     },
     {
        "type":"header",
        "content":"t:general.headers.main_section.content"
     },
     {
        "type":"select",
        "id":"main_color_scheme_first",
        "label":"t:general.settings.color_scheme.label",
        "options":[
           {
              "value":"color__bg-body color__text",
              "label":"t:general.settings.color_scheme.body.label"
           },
           {
              "value":"color__bg-neutral color__text",
              "label":"t:general.settings.color_scheme.neutral.label"
           },
           {
              "value":"color__bg-overlay-1 color__text",
              "label":"t:general.settings.color_scheme.accent_1.label"
           },
           {
              "value":"color__bg-overlay-2 color__text",
              "label":"t:general.settings.color_scheme.accent_2.label"
           },
           {
              "value":"color__bg-overlay-3 color__text",
              "label":"t:general.settings.color_scheme.accent_3.label"
           },
           {
              "value":"color__bg-primary color__primary",
              "label":"t:general.settings.color_scheme.primary.label"
           },
           {
              "value":"color__bg-secondary color__secondary",
              "label":"t:general.settings.color_scheme.secondary.label"
           },
           {
              "value":"color__bg-tertiary color__tertiary",
              "label":"t:general.settings.color_scheme.tertiary.label"
           }
        ],
        "default":"color__bg-body color__text"
     },
     {
        "type":"select",
        "id":"main_color_scheme_second",
        "label":"t:general.settings.secondary_background.label",
        "options":[
           {
              "value":"color__bg-body color__text",
              "label":"t:general.settings.color_scheme.body.label"
           },
           {
              "value":"color__bg-neutral color__text",
              "label":"t:general.settings.color_scheme.neutral.label"
           },
           {
              "value":"color__bg-overlay-1 color__text",
              "label":"t:general.settings.color_scheme.accent_1.label"
           },
           {
              "value":"color__bg-overlay-2 color__text",
              "label":"t:general.settings.color_scheme.accent_2.label"
           },
           {
              "value":"color__bg-overlay-3 color__text",
              "label":"t:general.settings.color_scheme.accent_3.label"
           },
           {
              "value":"color__bg-primary color__primary",
              "label":"t:general.settings.color_scheme.primary.label"
           },
           {
              "value":"color__bg-secondary color__secondary",
              "label":"t:general.settings.color_scheme.secondary.label"
           },
           {
              "value":"color__bg-tertiary color__tertiary",
              "label":"t:general.settings.color_scheme.tertiary.label"
           }
        ],
        "default":"color__bg-body color__text"
     },
     {
        "type":"select",
        "id":"main_color_border",
        "label":"t:general.settings.color_border.label",
        "options":[
           {
              "value":"color__border-divider-1",
              "label":"t:general.settings.color_border.subtle.label"
           },
           {
              "value":"color__border-selected-1",
              "label":"t:general.settings.color_border.strong.label"
           },
           {
              "value":"!color__border-transparent",
              "label":"t:general.settings.color_border.none.label"
           }
        ],
        "default":"color__border-divider-1"
     },
     {
        "type":"checkbox",
        "id":"main_enable_cart_note",
        "label":"t:general.settings.enable_cart_note.label",
        "default":true
     },
     {
        "type":"checkbox",
        "id":"main_enable_cart_share",
        "label":"t:general.settings.enable_cart_share.label",
        "default":false
     },
     {
        "type":"checkbox",
        "id":"main_enable_cart_subtotals",
        "label":"t:general.settings.show_cart_subtotals.label",
        "info":"t:general.settings.show_cart_subtotals.info",
        "default":true
     },
     {
        "type":"header",
        "content":"t:general.headers.bottom_bar.content"
     },
     {
        "type":"select",
        "id":"bottom_color_scheme",
        "label":"t:general.settings.color_scheme.label",
        "options":[
           {
              "value":"color__bg-body color__text",
              "label":"t:general.settings.color_scheme.body.label"
           },
           {
              "value":"color__bg-neutral color__text",
              "label":"t:general.settings.color_scheme.neutral.label"
           },
           {
              "value":"color__bg-overlay-1 color__text",
              "label":"t:general.settings.color_scheme.accent_1.label"
           },
           {
              "value":"color__bg-overlay-2 color__text",
              "label":"t:general.settings.color_scheme.accent_2.label"
           },
           {
              "value":"color__bg-overlay-3 color__text",
              "label":"t:general.settings.color_scheme.accent_3.label"
           },
           {
              "value":"color__bg-primary color__primary",
              "label":"t:general.settings.color_scheme.primary.label"
           },
           {
              "value":"color__bg-secondary color__secondary",
              "label":"t:general.settings.color_scheme.secondary.label"
           },
           {
              "value":"color__bg-tertiary color__tertiary",
              "label":"t:general.settings.color_scheme.tertiary.label"
           }
        ],
        "default":"color__bg-body color__text"
     },
     {
        "type":"select",
        "id":"bottom_color_border",
        "label":"t:general.settings.color_border.label",
        "options":[
           {
              "value":"color__border-divider-1",
              "label":"t:general.settings.color_border.subtle.label"
           },
           {
              "value":"color__border-selected-1",
              "label":"t:general.settings.color_border.strong.label"
           },
           {
              "value":"!color__border-transparent",
              "label":"t:general.settings.color_border.none.label"
           }
        ],
        "default":"color__border-divider-1"
     },
     {
        "type":"select",
        "id":"bottom_color_button",
        "label":"t:general.settings.color_button.label",
        "options":[
           {
              "value":"btn",
              "label":"t:general.settings.color_button.primary.label"
           },
           {
              "value":"btn btn--secondary",
              "label":"t:general.settings.color_button.secondary.label"
           },
           {
              "value":"btn btn--tertiary",
              "label":"t:general.settings.color_button.tertiary.label"
           },
           {
              "value":"btn btn--neutral",
              "label":"t:general.settings.color_button.neutral.label"
           },
           {
              "value":"btn btn--plain",
              "label":"t:general.settings.color_button.plain.label"
           }
        ],
        "default":"btn"
     },
     {
        "type":"select",
        "id":"cart_button_behavior",
        "label":"t:general.settings.cart_button_behavior.label",
        "info":"t:general.settings.cart_button_behavior.info",
        "options":[
           {
              "value":"checkout",
              "label":"t:general.settings.cart_button_behavior.checkout.label"
           },
           {
              "value":"cart",
              "label":"t:general.settings.cart_button_behavior.cart.label"
           }
        ],
        "default":"checkout"
     },
     {
        "type":"richtext",
        "id":"bottom_disclaimer",
        "label":"t:general.settings.checkout_disclaimer.label"
     },
     {
        "type":"checkbox",
        "id":"show_continue_shopping_button",
        "label":"t:general.settings.show_continue_shopping_button.label",
        "default":false
     },
     {
      "type":"checkbox",
      "id":"show_button_prices",
      "label":"t:general.settings.show_button_prices.label",
      "default":true
    },
     {
        "type":"header",
        "content":"t:general.headers.sidebar.content"
     },
     {
        "type":"select",
        "id":"sidebar_color_scheme",
        "label":"t:general.settings.color_scheme.label",
        "options":[
           {
              "value":"color__bg-body color__text",
              "label":"t:general.settings.color_scheme.body.label"
           },
           {
              "value":"color__bg-neutral color__text",
              "label":"t:general.settings.color_scheme.neutral.label"
           },
           {
              "value":"color__bg-overlay-1 color__text",
              "label":"t:general.settings.color_scheme.accent_1.label"
           },
           {
              "value":"color__bg-overlay-2 color__text",
              "label":"t:general.settings.color_scheme.accent_2.label"
           },
           {
              "value":"color__bg-overlay-3 color__text",
              "label":"t:general.settings.color_scheme.accent_3.label"
           },
           {
              "value":"color__bg-primary color__primary",
              "label":"t:general.settings.color_scheme.primary.label"
           },
           {
              "value":"color__bg-secondary color__secondary",
              "label":"t:general.settings.color_scheme.secondary.label"
           },
           {
              "value":"color__bg-tertiary color__tertiary",
              "label":"t:general.settings.color_scheme.tertiary.label"
           }
        ],
        "default":"color__bg-body color__text"
     },
     {
        "type":"select",
        "id":"sidebar_color_border",
        "label":"t:general.settings.color_border.label",
        "options":[
           {
              "value":"color__border-divider-1",
              "label":"t:general.settings.color_border.subtle.label"
           },
           {
              "value":"color__border-selected-1",
              "label":"t:general.settings.color_border.strong.label"
           }
        ],
        "default":"color__border-divider-1"
     },
     {
        "type":"header",
        "content":"t:general.headers.progress_bar.content"
     },
     {
        "type":"number",
        "id":"progress_bar_threshold",
        "label":"t:general.settings.progress_bar_threshold.label",
        "info":"t:general.settings.progress_bar_threshold.info"
     },
     {
        "type":"text",
        "id":"progress_bar_success",
        "label":"t:general.settings.progress_bar_success.label",
        "info":"t:general.settings.progress_bar_success.info"
     },
     {
        "type":"checkbox",
        "id":"progress_bar_enable",
        "label":"t:general.settings.progress_bar_enable.label",
        "default":false
     },
     {
        "type":"header",
        "content":"t:general.settings.upsell_checkbox.content"
     },
     {
        "type":"text",
        "id":"main_cart_upgrade_product",
        "label":"t:general.settings.checkbox_upsell_id.label",
        "info":"t:general.settings.checkbox_upsell_id.info"
     },
     {
        "type":"text",
        "id":"main_cart_upgrade_text",
        "label":"t:general.settings.label.label"
     },
     {
        "type":"header",
        "content":"t:general.settings.upsell_slider.content"
     },
     {
        "type":"collection",
        "id":"cart_upsell_products",
        "label":"t:general.settings.cart_upsell_products.label",
        "info":"t:general.settings.cart_upsell_products.info"
     },
     {
        "type":"header",
        "content":"t:general.headers.empty_cart.content"
     },
     {
        "type":"text",
        "id":"empty_button_label",
        "label":"t:general.settings.button_label.label",
        "default":{
           "en":"Shop all",
           "es":"Comprar todo",
           "it":"Acquista tutto",
           "de":"Alles kaufen",
           "fr":"Magasiner tout"
        }
     },
     {
        "type":"url",
        "id":"empty_button_url",
        "label":"t:general.settings.button_url.label",
        "default":"/collections/all"
     }
  ],
  "blocks":[
     {
        "type":"Content",
        "name":"t:sections.theme_cart.blocks.content.name",
        "limit":4,
        "settings":[
           {
              "type":"paragraph",
              "content":"t:general.paragraphs.cart_upsell_featured.content"
           },
           {
              "type":"paragraph",
              "content":"t:general.paragraphs.cart_blocks_warning.content"
           },
           {
              "type":"header",
              "content":"t:general.headers.content.content"
           },
           {
              "type":"image_picker",
              "id":"image_featured",
              "label":"t:general.settings.icon_64.label",
              "info":"t:general.settings.icon_64.info"
           },
           {
              "type":"text",
              "id":"heading",
              "label":"t:general.settings.heading.label",
              "default":{
                 "en":"Block heading",
                 "es":"Encabezado de bloque",
                 "it":"Intestazione del blocco",
                 "de":"BlockÃ¼berschrift",
                 "fr":"En-tÃªte de bloc"
              }
           },
           {
              "type":"richtext",
              "id":"content",
              "label":"t:general.settings.content.label",
              "default":{
                 "en":"<p>Remind customers of offers like free shipping and lifetime warranty</p>",
                 "es":"<p>Recuerde a los clientes ofertas como envÃ­o gratuito y garantÃ­a de por vida</p>",
                 "it":"<p>Ricorda ai clienti offerte come la spedizione gratuita e la garanzia a vita</p>",
                 "de":"<p>Erinnern Sie Kunden an Angebote wie kostenlosen Versand und lebenslange Garantie</p>",
                 "fr":"<p>Rappelez aux clients des offres telles que la livraison gratuite et la garantie Ã  vie</p>"
              }
           }
        ]
     }
  ],
  "disabled_on":{
     "groups":[
        "custom.overlay"
     ]
  }
}
{% endschema %}